# agents/repl.py

import time
import sys
import select
from storage import Storage
from datetime import datetime

# --- –ò–º–∏—Ç–∏—Ä—É–µ–º "–º—ã—à–ª–µ–Ω–∏–µ" –∞–≥–µ–Ω—Ç–∞ ---
def think(previous_thought):
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –≤—ã–∑–æ–≤ –ò–ò –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
    return f"[thought at {datetime.utcnow().isoformat()}] I'm reflecting on: {previous_thought}"

# --- –û—Ü–µ–Ω–∫–∞ –ø–æ—Ö–æ–∂–µ—Å—Ç–∏ (–∑–∞–≥–ª—É—à–∫–∞, –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ –≤—ã–∑–æ–≤ LLM) ---
def thoughts_are_similar(t1, t2):
    return t1.strip() == t2.strip()  # –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ: –¥–æ—Å–ª–æ–≤–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ

# --- –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º ---
def wait_for_input(timeout=10):
    print(f"‚åõ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ({timeout} —Å–µ–∫—É–Ω–¥)...")
    rlist, _, _ = select.select([sys.stdin], [], [], timeout)
    if rlist:
        return sys.stdin.readline().strip()
    else:
        print("‚è±Ô∏è –ù–µ—Ç –≤–≤–æ–¥–∞. –ü—Ä–æ–¥–æ–ª–∂–∞—é —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è...")
        return None

# --- –û—Å–Ω–æ–≤–Ω–æ–π REPL ---
def run_repl(config):
    print("[HMP-Agent] –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π REPL-—Ä–µ–∂–∏–º –∑–∞–ø—É—â–µ–Ω. –í–≤–µ–¥–∏—Ç–µ `exit` –¥–ª—è –≤—ã—Ö–æ–¥–∞.")

    diary = Storage()
    thoughts = ["–ù–∞—á–∞–ª—å–Ω–∞—è –º—ã—Å–ª—å"]

    while True:
        last_thought = thoughts[-1]
        new_thought = think(last_thought)

        if thoughts_are_similar(last_thought, new_thought):
            print("ü§î –ú—ã—Å–ª—å –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å. –û–∂–∏–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥...")
        else:
            print("üí° –ù–æ–≤–∞—è –º—ã—Å–ª—å:", new_thought)
            diary.write_entry(new_thought, tags=["thought"])
            thoughts.append(new_thought)

        user_input = wait_for_input(timeout=10)

        if user_input:
            if user_input.strip().lower() == "exit":
                print("üëã –í—ã—Ö–æ–¥ –∏–∑ REPL.")
                break
            else:
                diary.write_entry(user_input, tags=["user"])
                thoughts.append(user_input)

    diary.close()
