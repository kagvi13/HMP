# agents/repl.py

import time
from datetime import datetime
from tools.context_builder import build_contexts
from tools.llm import call_llm
from tools.command_parser import extract_commands
from tools.command_executor import execute_commands
from tools.memory_utils import update_llm_memory, detect_stagnation
from storage import Storage

def run_repl(config=None):
    print("[üß† HMP-Agent] –ó–∞–ø—É—Å–∫ REPL-—Ä–µ–∂–∏–º–∞ (v2).")
    config = config or {}
    db = Storage(config=config)
    
    while True:
        tick_start = datetime.utcnow().isoformat()
        print(f"\n=== [üåÄ –ù–æ–≤—ã–π —Ç–∏–∫ REPL] {tick_start} ===")

        # 1. –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤
        contexts = build_contexts(db=db, config=config)

        # 2. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ LLM
        prompt = build_prompt(contexts)
        llm_response = call_llm(prompt, config=config)

        # 3. –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —Å—Ç–∞–≥–Ω–∞—Ü–∏–∏
        if detect_stagnation(db, llm_response):
            print("‚ö†Ô∏è –°—Ç–∞–≥–Ω–∞—Ü–∏—è –≤—ã—è–≤–ª–µ–Ω–∞. –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω Anti-Stagnation Reflex.")
            llm_response = activate_anti_stagnation(db, config=config)

        # 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏
        update_llm_memory(db, llm_response)

        # 5. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
        commands = extract_commands(llm_response)
        execute_commands(commands, db=db, config=config)

        # 6. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
        db.write_llm_response(llm_response)

        # 7. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞–º–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        if check_idle_mode(config):
            wait_idle_trigger(config)
        else:
            time.sleep(config.get("repl_interval", 5))
