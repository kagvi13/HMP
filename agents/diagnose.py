import socket
import requests

def get_internal_ips():
    ips = []
    hostname = socket.gethostname()
    try:
        ip = socket.gethostbyname(hostname)
        ips.append(ip)
    except:
        pass
    try:
        # –í—ã—Ç—è–≥–∏–≤–∞–µ–º IP —Å–æ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
        for info in socket.getaddrinfo(hostname, None):
            addr = info[4][0]
            if addr not in ips and ':' not in addr:
                ips.append(addr)
    except:
        pass
    return ips

def get_external_ip():
    try:
        ip4 = requests.get("https://api.ipify.org").text
        ip6 = requests.get("https://api64.ipify.org").text
        return ip4, ip6
    except:
        return None, None

def check_port(port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(1)
    result = sock.connect_ex(("0.0.0.0", port))
    sock.close()
    return result == 0

if __name__ == "__main__":
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ HMP-–∞–≥–µ–Ω—Ç–∞\n")

    print("üì° –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ IP-–∞–¥—Ä–µ—Å–∞:")
    for ip in get_internal_ips():
        print(f"  - {ip}")

    ip4, ip6 = get_external_ip()
    print("\nüåç –í–Ω–µ—à–Ω–∏–µ IP:")
    print(f"  - IPv4: {ip4 or '‚ùå'}")
    print(f"  - IPv6: {ip6 or '‚ùå'}")

    port = 22555
    print(f"\nüîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ DHT ({port}): {'üü¢ –æ—Ç–∫—Ä—ã—Ç' if check_port(port) else 'üî¥ –∑–∞–∫—Ä—ã—Ç'}")
