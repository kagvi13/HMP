# agents/check_agents.py

import os
import sys
from datetime import datetime, UTC

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from tools.storage import Storage

storage = Storage()

def print_config():
    print("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    rows = storage.conn.execute("SELECT key, value FROM config").fetchall()
    if not rows:
        print(" ‚Ä¢ (—Ç–∞–±–ª–∏—Ü–∞ config –ø—É—Å—Ç–∞)")
    for key, value in rows:
        print(f" ‚Ä¢ {key:20} = {value}")
    print()

def check_all_processes():
    print_config()
    print(f"üóÑÔ∏è –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {storage.db_path}\n")

    processes = storage.conn.execute("SELECT name, heartbeat FROM main_process").fetchall()
    if not processes:
        print("‚õî –í –±–∞–∑–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.")
        return

    print("üìã –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:")
    now = datetime.now(UTC)
    for name, heartbeat in processes:
        try:
            hb_time = datetime.fromisoformat(heartbeat)
            delta = (now - hb_time).total_seconds()
            status = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if delta < 180 else "üî¥ –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
            print(f" ‚Ä¢ {name:20} ‚Äî {status} (–æ–±–Ω–æ–≤–ª—ë–Ω {int(delta)} —Å–µ–∫. –Ω–∞–∑–∞–¥)")
        except Exception as e:
            print(f" ‚Ä¢ {name:20} ‚Äî ‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_all_processes()
