import sys
import os
import threading
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from agents.init import ensure_db_initialized

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–≤–µ—Ä–Ω—ë—Ç config, –µ—Å–ª–∏ –≤—Å—ë –û–ö)
config = ensure_db_initialized()

# ‚öôÔ∏è –í–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
ENABLE_REPL      = False  # üß† repl.py
ENABLE_UI        = True  # üìì notebook.py (FastAPI)
ENABLE_MESH      = False  # üåê agent_mesh_listener.py
ENABLE_SYNC      = False  # üîÑ peer_sync.py
ENABLE_TRANSPORT = False  # üì° transporter.py
ENABLE_CONTROL   = False  # üß≠ agent_controller.py
ENABLE_CONTAINER = False  # üß± container_agent.py
ENABLE_ETHICS    = False  # üß† ethics_guard.py

def start_all():
    threads = []

    if ENABLE_REPL:
        def repl():
            from agents.repl import start_repl
            start_repl()
        threads.append(threading.Thread(target=repl, name="REPL"))

    if ENABLE_UI:
        def ui():
            from agents.notebook import start_notebook
            start_notebook()
        threads.append(threading.Thread(target=ui, name="NotebookUI"))

    if ENABLE_MESH:
        def mesh():
            from agents.agent_mesh_listener import start_listener
            start_listener()
        threads.append(threading.Thread(target=mesh, name="MeshListener"))

    if ENABLE_SYNC:
        def sync():
            from agents.peer_sync import start_sync
            start_sync()
        threads.append(threading.Thread(target=sync, name="PeerSync"))

    if ENABLE_TRANSPORT:
        def transport():
            from agents.transporter import start_transporter
            start_transporter()
        threads.append(threading.Thread(target=transport, name="Transporter"))

    if ENABLE_CONTROL:
        def control():
            from agents.agent_controller import start_controller
            start_controller()
        threads.append(threading.Thread(target=control, name="Controller"))

    if ENABLE_CONTAINER:
        def container():
            from agents.container_agent import start_container
            start_container()
        threads.append(threading.Thread(target=container, name="ContainerAgent"))

    if ENABLE_ETHICS:
        def ethics():
            from agents.ethics_guard import start_ethics_guard
            start_ethics_guard()
        threads.append(threading.Thread(target=ethics, name="EthicsGuard"))

    # –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–æ–≤
    for thread in threads:
        try:
            thread.start()
            print(f"[‚úî] –ü–æ—Ç–æ–∫ {thread.name} –∑–∞–ø—É—â–µ–Ω.")
        except Exception as e:
            print(f"[‚ö†Ô∏è] –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–æ—Ç–æ–∫–∞ {thread.name}: {e}")

    for thread in threads:
        thread.join()

if __name__ == "__main__":
    print("[*] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–æ–≤...")
    start_all()
