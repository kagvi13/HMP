{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://hypercortex.org/schemas/concept.json",
  "title": "Concept",
  "description": "A semantic unit in the agentâ€™s knowledge graph.",
  "version": "1.0",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the concept."
    },
    "name": {
      "type": "string",
      "description": "Human-readable name of the concept."
    },
    "description": {
      "type": "string",
      "description": "Detailed description of the concept."
    },
    "tags": {
      "type": "array",
      "items": { "type": "string" },
      "description": "Optional tags for categorization."
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "description": "Creation timestamp (ISO 8601 format)."
    },
    "updated_at": {
      "type": "string",
      "format": "date-time",
      "description": "Last update timestamp (ISO 8601 format)."
    },
    "relations": {
      "type": "array",
      "description": "List of semantic links to other concepts.",
      "items": {
        "type": "object",
        "properties": {
          "target_id": { "type": "string", "description": "ID of the target concept." },
          "type": { "type": "string", "description": "Type of semantic relation." },
          "confidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Confidence score (0.0 - 1.0) for the relation."
          }
        },
        "required": ["target_id", "type"],
        "additionalProperties": false
      }
    },
    "metadata": {
      "type": "object",
      "description": "Optional metadata (e.g., source, author).",
      "properties": {
        "author": { "type": "string" },
        "source": { "type": "string" }
      },
      "additionalProperties": true
    }
  },
  "required": ["id", "name"],
  "additionalProperties": false
}