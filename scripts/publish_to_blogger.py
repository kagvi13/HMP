import json
import os
import hashlib
import markdown2
# from googleapiclient.discovery import build
# from google.oauth2.credentials import Credentials
# from googleapiclient.errors import HttpError
import pickle
import sys

# –§–∞–π–ª—ã ‚Äî –≤—Å–µ–≥–¥–∞ –≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
JSON_FILE = os.path.join(os.getcwd(), "published_posts.json")

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
if os.path.exists(JSON_FILE):
    try:
        with open(JSON_FILE, 'r', encoding='utf-8') as f:
            published = json.load(f)
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Å–ø–∏—Å–æ–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {list(published.keys())}")
        print(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ JSON –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:\n{json.dumps(published, ensure_ascii=False, indent=2)}")
    except json.JSONDecodeError:
        print("‚ö† published_posts.json –ø—É—Å—Ç–æ–π –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Å –Ω—É–ª—è.")
        published = {}
else:
    published = {}
    print("‚ö† published_posts.json –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Å –Ω—É–ª—è.")

# –û–±—Ö–æ–¥ markdown —Ñ–∞–π–ª–æ–≤
for root, _, files in os.walk("docs"):
    for filename in files:
        if not filename.endswith(".md"):
            continue

        path = os.path.join(root, filename)
        title = os.path.splitext(filename)[0]

        with open(path, 'r', encoding='utf-8') as f:
            md_content = f.read()

        content_hash = hashlib.md5(md_content.encode('utf-8')).hexdigest()

        if title in published and published[title]['hash'] == content_hash:
            print(f"‚è≠ –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {title}")
            continue

        # –í –æ—Ç–ª–∞–¥–æ—á–Ω–æ–º —Ä–µ–∂–∏–º–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ Blogger
        print(f"üìù –ù–æ–≤—ã–π –∏–ª–∏ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π –ø–æ—Å—Ç: {title}")
        published[title] = {"id": "DUMMY_ID", "hash": content_hash}

# –õ–æ–≥–∏—Ä—É–µ–º JSON –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é
print(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ JSON –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é:\n{json.dumps(published, ensure_ascii=False, indent=2)}")

# –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å)
with open(JSON_FILE, 'w', encoding='utf-8') as f:
    json.dump(published, f, ensure_ascii=False, indent=2)

print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω –≤ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–º —Ä–µ–∂–∏–º–µ (–ø—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞).")
